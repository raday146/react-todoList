{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","task","handleRemove","bind","toggleForm","handleChange","handleUpdate","handleToggle","evt","this","toggleTodo","id","removeItem","setState","preventDefault","updateTodo","target","name","value","className","onSubmit","type","onChange","completed","onClick","Component","NewTodoForm","handleSubmit","createTodo","uuid","htmlFor","placeholder","TodoList","todos","create","update","toggleCompleted","newTodo","filter","t","updatedTask","updatedTodos","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.004d01d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Todo.css\";\r\nclass Todo extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isEditing:false,\r\n            task:this.props.task\r\n        };\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange= this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n\r\n    }\r\n    handleToggle(evt){\r\n        this.props.toggleTodo(this.props.id);\r\n    }\r\n   handleRemove(){\r\n       this.props.removeItem(this.props.id);\r\n   }\r\n   toggleForm(){\r\n       this.setState({\r\n           isEditing:!this.state.isEditing\r\n       });\r\n   }\r\n   handleUpdate(evt){\r\n       evt.preventDefault();\r\n       this.props.updateTodo(this.props.id, this.state.task);\r\n       this.setState({isEditing:false});\r\n   }\r\n   handleChange(evt){\r\n       this.setState({\r\n        [evt.target.name]:evt.target.value\r\n       });\r\n   }\r\n    render(){\r\n        let res;\r\n        if(this.state.isEditing){\r\n          res =(\r\n             <div className=\"Todo\">\r\n                <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n                    <input type=\"text\" \r\n                     value={this.state.task}\r\n                     name=\"task\" \r\n                     onChange={this.handleChange}\r\n                     />\r\n                    <button>Save</button>\r\n                </form>\r\n             </div>\r\n          );\r\n        }else{\r\n           res = (\r\n                 <div className=\"Todo\">\r\n                  <li className={this.props.completed? \"Todo-task completed\": \"Todo-task\"}\r\n                    onClick={this.handleToggle}> {this.props.task} </li>\r\n                \r\n                   <div className=\"Todo-buttons\">\r\n                    <button onClick={this.toggleForm}><li className='fas fa-pen'></li></button>\r\n                    <button onClick={this.handleRemove}><li className=\"fas fa-trash\"></li></button>\r\n                   </div>\r\n                 \r\n                 </div>\r\n           );\r\n        }\r\n        return res;\r\n    }\r\n}\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport {v4 as uuid} from \"uuid\"; \r\nimport './NewTodoForm.css';\r\n\r\nclass NewTodoForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={task:\"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.createTodo({...this.state, id:uuid(), completed:false});\r\n        this.setState({task:\"\"});\r\n    }\r\n      render(){\r\n        return(\r\n            <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"task\">New Todo</label>\r\n                <input type='text' placeholder='New Todo'\r\n                    id='task'\r\n                    value={this.state.task}\r\n                    name='task'\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button>Add Todo</button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\nexport default NewTodoForm;","import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport './TodoList.css';\r\nclass TodoList extends Component{\r\n constructor(props){\r\n    super(props);\r\n    this.state={todos: []};   \r\n    this.create = this.create.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);     \r\n    this.update = this.update.bind(this);\r\n    this.toggleCompleted = this.toggleCompleted.bind(this);\r\n  }\r\n  create(newTodo){\r\n      this.setState({\r\n          todos: [...this.state.todos, newTodo]\r\n      });\r\n  }\r\n  removeItem(id){\r\n      this.setState({\r\n          todos: this.state.todos.filter(t =>t.id !==id)\r\n      });\r\n  }\r\n    update(id,updatedTask){\r\n       const updatedTodos= this.state.todos.map(todo =>{\r\n        if(todo.id === id){\r\n            return {...todo, task:updatedTask};\r\n        }\r\n        return todo;\r\n       });\r\n       this.setState({todos: updatedTodos});\r\n   } \r\n   toggleCompleted(id){\r\n      const updatedTodos= this.state.todos.map(todo =>{\r\n        if(todo.id === id){\r\n            return {...todo, completed: !todo.completed};\r\n        }\r\n        return todo;\r\n       });\r\n       this.setState({todos: updatedTodos});\r\n   }\r\n render(){\r\n     const todos = this.state.todos.map(todo => {\r\n          return <Todo key={todo.id} \r\n              id={todo.id}\r\n              task={todo.task} \r\n              removeItem={this.removeItem}\r\n              updateTodo ={this.update}\r\n              completed={todo.completed}\r\n              toggleTodo={this.toggleCompleted}\r\n              />\r\n     });\r\n     return(\r\n        <div className=\"TodoList\">\r\n            <h1>\r\n            Todo List! <span>A simple Todo List App.</span>\r\n            </h1>\r\n            <ul>\r\n              {todos}\r\n            </ul>\r\n            <NewTodoForm createTodo={this.create} />\r\n\r\n        </div>\r\n     );\r\n }\r\n \r\n}\r\nexport default TodoList;","import React, { Component } from 'react';\nimport TodoList from './TodoList';\nimport './App.css';\n\nclass App extends Component{\n render(){\n    return (\n    <div className=\"App\">\n          <TodoList/>\n\n    </div>\n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}